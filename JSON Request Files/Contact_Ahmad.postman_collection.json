{
	"info": {
		"_postman_id": "4b927c45-e3ed-4d12-8a72-5730777943b0",
		"name": "Contact_Ahmad",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46391842",
		"_collection_link": "https://abdelrahmanmurad-9507360.postman.co/workspace/Axsos---API-Project~704e60b5-da84-4292-976a-9dd207d275f0/collection/46391842-4b927c45-e3ed-4d12-8a72-5730777943b0?action=share&source=collection_link&creator=46391842"
	},
	"item": [
		{
			"name": "Patch_TC",
			"item": [
				{
					"name": "Update Contact_without_Mandatoryfields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct all fields exist and have value\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    pm.expect(json).to.have.property(\"owner\")\r",
									"    pm.expect(json).to.have.property(\"birthdate\")\r",
									"     pm.expect(json).to.have.property(\"city\")\r",
									"      pm.expect(json).to.have.property(\"country\")\r",
									"       pm.expect(json).to.have.property(\"email\")\r",
									"        pm.expect(json).to.have.property(\"phone\")\r",
									"    pm.expect(json).to.have.property(\"postalCode\")\r",
									"    pm.expect(json).to.have.property(\"stateProvince\")\r",
									"    pm.expect(json).to.have.property(\"street1\")\r",
									"    pm.expect(json).to.have.property(\"street2\")\r",
									"    \r",
									"\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washingtondddddddddddddd\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Deir Ammar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with_Mandatoryfields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct all fields exist and have value\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    pm.expect(json).to.have.property(\"owner\")\r",
									"    pm.expect(json).to.have.property(\"birthdate\")\r",
									"     pm.expect(json).to.have.property(\"city\")\r",
									"      pm.expect(json).to.have.property(\"country\")\r",
									"       pm.expect(json).to.have.property(\"email\")\r",
									"        pm.expect(json).to.have.property(\"phone\")\r",
									"    pm.expect(json).to.have.property(\"postalCode\")\r",
									"    pm.expect(json).to.have.property(\"stateProvince\")\r",
									"    pm.expect(json).to.have.property(\"street1\")\r",
									"    pm.expect(json).to.have.property(\"street2\")\r",
									"    \r",
									"\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"ahmad \",\n    \"lastName\": \"badaha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with_invalid_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"contact ID is not correct or missing\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"stringValue\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"aaaaaaaaaaaaaa\",\n    \"lastName\": \"aaaaaaaaaaaaaa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/687bc060bbc6350015b16c8899",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"687bc060bbc6350015b16c8899"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with__Valid_Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct all fields exist and have value\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    pm.expect(json).to.have.property(\"owner\")\r",
									"    pm.expect(json).to.have.property(\"birthdate\")\r",
									"     pm.expect(json).to.have.property(\"city\")\r",
									"      pm.expect(json).to.have.property(\"country\")\r",
									"       pm.expect(json).to.have.property(\"email\")\r",
									"        pm.expect(json).to.have.property(\"phone\")\r",
									"    pm.expect(json).to.have.property(\"postalCode\")\r",
									"    pm.expect(json).to.have.property(\"stateProvince\")\r",
									"    pm.expect(json).to.have.property(\"street1\")\r",
									"    pm.expect(json).to.have.property(\"street2\")\r",
									"    \r",
									"\r",
									"    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"ahmad2\",\n    \"lastName\": \"badaha2\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amil_$%^&*ler@fake.ddd\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n   \n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with__Valid_Body_With_nonExisting_Feild",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Only spicified feilds updated\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    pm.expect(json).to.have.property(\"owner\")\r",
									"    pm.expect(json).to.have.property(\"birthdate\")\r",
									"     pm.expect(json).to.have.property(\"city\")\r",
									"      pm.expect(json).to.have.property(\"country\")\r",
									"       pm.expect(json).to.have.property(\"email\")\r",
									"        pm.expect(json).to.have.property(\"phone\")\r",
									"    pm.expect(json).to.have.property(\"postalCode\")\r",
									"    pm.expect(json).to.have.property(\"stateProvince\")\r",
									"    pm.expect(json).to.have.property(\"street1\")\r",
									"    pm.expect(json).to.have.property(\"street2\")\r",
									"    \r",
									"\r",
									"    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"anaaa\",\n    \"Test\":\"Test\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with__Wrong lenght for data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Data type or lenght is not correct \", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"errors\")\r",
									"\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"lastName\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"birthdate\": \"1992-02-02aaaaaaaa\",\n    \"email\": \"amiller@$$###$&fake.comaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"phone\": \"800555424aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2\",\n    \"street1\": \"13 School aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaSt.\",\n    \"street2\": \"Apt.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5\",\n    \"city\": \"Washingtonaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"stateProvince\": \"QaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaC\",\n    \"postalCode\": \"A1A1aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaA1\",\n    \"country\": \"Canaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_Missing_Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authentication is required  'Please authenticate.'\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.error).to.equal(\"Please authenticate.\");\r",
									"});\r",
									"pm.test(\"You are not authorised \", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Please authenticate.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"aaaaaaaaaaaaaa\",\n    \"lastName\": \"aaaaaaaaaaaaaa\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				}
			]
		},
		{
			"name": "PUT_TC",
			"item": [
				{
					"name": "Update Contact_without_Mandatoryfields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"’Mandatory fields missing \", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"errors\")\r",
									"\r",
									"\r",
									"})\r",
									"\r",
									"    \r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with_Mandatory fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Mandatory fields exist \", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"aaaaaaaaaaaaaa\",\n    \"lastName\": \"aaaaaaaaaaaaaa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with_invalid_Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"contact ID is not correct or missing\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"stringValue\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"aaaaaaaaaaaaaa\",\n    \"lastName\": \"aaaaaaaaaaaaaa\",\n    \"birthdate\": \"1992-02-02\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/687bc060bbc6350015b16c8899",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"687bc060bbc6350015b16c8899"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with__Valid_Body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct all fields exist and have value\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    pm.expect(json).to.have.property(\"owner\")\r",
									"    pm.expect(json).to.have.property(\"birthdate\")\r",
									"     pm.expect(json).to.have.property(\"city\")\r",
									"      pm.expect(json).to.have.property(\"country\")\r",
									"       pm.expect(json).to.have.property(\"email\")\r",
									"        pm.expect(json).to.have.property(\"phone\")\r",
									"    pm.expect(json).to.have.property(\"postalCode\")\r",
									"    pm.expect(json).to.have.property(\"stateProvince\")\r",
									"    pm.expect(json).to.have.property(\"street1\")\r",
									"    pm.expect(json).to.have.property(\"street2\")\r",
									"    \r",
									"\r",
									"    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"ahmad\",\n    \"lastName\": \"badaha\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with__Valid_Body_Dublicted in Reques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is correct all fields exist and have value\", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    pm.expect(json).to.have.property(\"owner\")\r",
									"    pm.expect(json).to.have.property(\"birthdate\")\r",
									"     pm.expect(json).to.have.property(\"city\")\r",
									"      pm.expect(json).to.have.property(\"country\")\r",
									"       pm.expect(json).to.have.property(\"email\")\r",
									"        pm.expect(json).to.have.property(\"phone\")\r",
									"    pm.expect(json).to.have.property(\"postalCode\")\r",
									"    pm.expect(json).to.have.property(\"stateProvince\")\r",
									"    pm.expect(json).to.have.property(\"street1\")\r",
									"    pm.expect(json).to.have.property(\"street2\")\r",
									"    \r",
									"\r",
									"    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"ahmad\",\n    \"lastName\": \"badaha\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\",\n    \"Test\":\"test\"\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with__Valid_Body_non_Existing field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Only spicified feilds updated \", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"_id\")\r",
									"     pm.expect(json).to.have.property(\"firstName\")\r",
									"    pm.expect(json).to.have.property(\"lastName\")\r",
									"    pm.expect(json).to.have.property(\"owner\")\r",
									"    pm.expect(json).to.have.property(\"birthdate\")\r",
									"     pm.expect(json).to.have.property(\"city\")\r",
									"      pm.expect(json).to.have.property(\"country\")\r",
									"       pm.expect(json).to.have.property(\"email\")\r",
									"        pm.expect(json).to.have.property(\"phone\")\r",
									"    pm.expect(json).to.have.property(\"postalCode\")\r",
									"    pm.expect(json).to.have.property(\"stateProvince\")\r",
									"    pm.expect(json).to.have.property(\"street1\")\r",
									"    pm.expect(json).to.have.property(\"street2\")\r",
									"    \r",
									"\r",
									"    \r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"ahmad badaha\",\n    \"lastName\": \"ali\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"DeirAmmar\",\n    \"Test\":\"Test\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_with__InValid_Body_Wrong lenght for data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const requestBody = {\r",
									"    \"firstName\": \"aaaaaaaaaaaaaaaaaa\", // maxlength: 20\r",
									"    \"lastName\": \"aaaaaaaaaaaaaaaaaa\",  // maxlength: 20\r",
									"    \"birthdate\": \"1992-02-0dd2\",          // invalid format\r",
									"    \"email\": \"amiller@fake.ddd\",        // valid email format\r",
									"    \"phone\": \"80055542d4\",               // maxlength: 15\r",
									"    \"street1\": \"13 School\",             // maxlength: 40\r",
									"    \"street2\": \"Apt.\",                  // maxlength: 40\r",
									"    \"city\": \"Washington\",               // maxlength: 40\r",
									"    \"stateProvince\": \"Q\",               // maxlength: 20\r",
									"    \"postalCode\": \"A1A1A1\",             // maxlength: 10\r",
									"    \"country\": \"Canada\"                 // maxlength: 40\r",
									"};\r",
									"\r",
									"// Check data types\r",
									"pm.test(\"Request body data types or lengths  are incorrect\", function () {\r",
									"    const fields = ['firstName', 'lastName', 'birthdate', 'email', 'phone', 'street1', 'street2', 'city', 'stateProvince', 'postalCode', 'country'];\r",
									"    fields.forEach(field => {\r",
									"        pm.expect(typeof requestBody[field]).to.equal('string');\r",
									"    });\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 400 \", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Data type or lenght is not correct \", () => {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"errors\")\r",
									"\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"lastName\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"birthdate\": \"1992-02-02aaaaaaaa\",\n    \"email\": \"amiller@fake.comaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"phone\": \"800555424aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa2\",\n    \"street1\": \"13 School aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaSt.\",\n    \"street2\": \"Apt.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa5\",\n    \"city\": \"Washingtonaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n    \"stateProvince\": \"QaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaC\",\n    \"postalCode\": \"A1A1aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaA1\",\n    \"country\": \"Canaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				},
				{
					"name": "Update Contact_Missing_Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authentication is required  'Please authenticate.'\", function() {\r",
									"    const response = pm.response.json();\r",
									"    pm.expect(response.error).to.equal(\"Please authenticate.\");\r",
									"});\r",
									"pm.test(\"You are not authorised \", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"aaaaaaaaaaaaaa\",\n    \"lastName\": \"aaaaaaaaaaaaaa\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Update Contact",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1B2D4\",\n    \"country\": \"Canada\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"Amy\",\n    \"lastName\": \"Miller\",\n    \"birthdate\": \"1992-02-02\",\n    \"email\": \"amiller@fake.com\",\n    \"phone\": \"8005554242\",\n    \"street1\": \"13 School St.\",\n    \"street2\": \"Apt. 5\",\n    \"city\": \"Washington\",\n    \"stateProvince\": \"QC\",\n    \"postalCode\": \"A1A1A1\",\n    \"country\": \"Canada\"\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
						}
					]
				}
			]
		},
		{
			"name": "Delete_TC",
			"item": [
				{
					"name": "Delete Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Contact deleted successfully \", function () {",
									"    pm.response.to.have.body(\"Contact deleted\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete Contact",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "Contact deleted"
						}
					]
				},
				{
					"name": "Delete not existing Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Contact deleted previously\", function () {",
									"    pm.expect(pm.response.text()).to.eql(\"\");",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contact_id}}",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts",
								"{{contact_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Delete Contact",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{contactId}}",
									"protocol": "https",
									"host": [
										"thinking-tester-contact-list",
										"herokuapp",
										"com"
									],
									"path": [
										"contacts",
										"{{contactId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "Contact deleted"
						}
					]
				}
			]
		},
		{
			"name": "Add Contact with full body Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"{\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.environment.set(\"contact_id\", jsonData._id);\r",
							"}\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is correct all fields exist and have value\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json).to.have.property(\"_id\")\r",
							"     pm.expect(json).to.have.property(\"firstName\")\r",
							"    pm.expect(json).to.have.property(\"lastName\")\r",
							"    pm.expect(json).to.have.property(\"owner\")\r",
							"    pm.expect(json).to.have.property(\"birthdate\")\r",
							"    pm.expect(json).to.have.property(\"city\")\r",
							"    pm.expect(json).to.have.property(\"country\")\r",
							"    pm.expect(json).to.have.property(\"email\")\r",
							"    pm.expect(json).to.have.property(\"phone\")\r",
							"    pm.expect(json).to.have.property(\"postalCode\")\r",
							"    pm.expect(json).to.have.property(\"stateProvince\")\r",
							"    pm.expect(json).to.have.property(\"street1\")\r",
							"    pm.expect(json).to.have.property(\"street2\")\r",
							"     \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jdoe@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"{\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.environment.set(\"token\", jsonData.token);\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"badaha.22@gmail.com\",\r\n    \"password\": \"Aa00147235\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/login",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Add Contact",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jdoe@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jdoe@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\",\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
				}
			]
		},
		{
			"name": "Create_User_to_get_token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\n{\n    \"firstName\": \"ahmad\",\n    \"lastName\": \"badaha\",\n    \"email\": \"badaha.22@gmail.com\",\n    \"password\": \"Aa00147235\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": [
				{
					"name": "Add Contact",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jdoe@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
							"protocol": "https",
							"host": [
								"thinking-tester-contact-list",
								"herokuapp",
								"com"
							],
							"path": [
								"contacts"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\n    \"_id\": \"6085a221fcfc72405667c3d4\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jdoe@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"Anytown\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\",\n    \"owner\": \"6085a21efcfc72405667c3d4\",\n    \"__v\": 0\n}"
				}
			]
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	]
}